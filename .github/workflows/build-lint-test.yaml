name: Lint, Test, Build Taskly

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "deploy/tf/**"
      - ".github/workflows/infra-**"
  pull_request:
    paths-ignore:
      - "deploy/tf/**"
      - ".github/workflows/infra-**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mshade/taskly

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [frontend, backend]

    outputs:
      releaseTag: ${{ steps.meta.outputs.version }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Deps
        run: |
          docker build ${{ matrix.component }} --target test -t ${{ matrix.component}}-test

      - name: Type Check
        run: |
          docker run -i --rm -v $PWD/${{ matrix.component }}:/app ${{ matrix.component }}-test npm run type-check

      - name: Linting
        run: |
          docker run -i --rm -v $PWD/${{ matrix.component }}:/app ${{ matrix.component}}-test npm run lint

      - name: Tests
        if: ${{ matrix.component == 'backend' }}
        run: |
          docker run -i --rm -v $PWD/${{ matrix.component }}:/app ${{ matrix.component}}-test npm run test

      - name: Log into GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          tags: |
            # Release tag as container tag
            type=ref,event=tag
            # latest for main builds
            type=raw,value=latest,enable={{is_default_branch}}
            # always tag with sha for reference
            type=sha,priority=500
            # tag PRs
            type=ref,event=pr
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.component }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.component }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      RELEASE_TAG: ${{ needs.build.releaseTag }}
      TF_CLOUD_ORGANIZATION: "mshade"
      TF_WORKSPACE: "taskly"
      TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
      CONFIG_DIRECTORY: "./deploy/tf"
      KUBECONFIG: "/tmp/taskly-kubeconfig.yaml"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Get Kubeconfig from TF state
        working-directory: deploy/tf
        run: |
          env
          terraform init
          terraform output taskly_kubeconfig #| base64 -d > ${{ env.KUBECONFIG }}
      
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy Taskly to k8s
        working-directory: deploy
        run: |
          kubectl get po -A
          kubectl get ns "${{ env.RELEASE_TAG }}" || kubectl create ns "${{ env.RELEASE_TAG }}"
          envsubst < k8s/* | kubectl -n "${{ env.RELEASE_TAG }}" apply -f -
